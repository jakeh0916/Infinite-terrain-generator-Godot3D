[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode vertex_lighting;

uniform vec4 depth_color : hint_color;
uniform vec4 land_color : hint_color;
uniform vec4 shore_color : hint_color;

varying vec3 world_position;

void vertex() {
	world_position = (WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;
}

void fragment() {
	if (world_position.y < -20.0) {
		ALBEDO = depth_color.rgb;
	} else if (world_position.y < -5.0) {
		float m = (world_position.y + 20.0) / 15.0;
		ALBEDO = mix(depth_color.rgb, shore_color.rgb, m);
	} else if (world_position.y < 0.0) {
		ALBEDO = shore_color.rgb;
	} else if (world_position.y < 5.0) {
		float m = world_position.y / 5.0;
		ALBEDO = mix(shore_color.rgb, land_color.rgb, m);
	} else {
		ALBEDO = land_color.rgb;
	}
}
"
